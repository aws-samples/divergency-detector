1
00:00:01,029 --> 00:00:02,920
AWS Fargate Overview.

2
00:00:04,619 --> 00:00:04,639
AWS

3
00:00:05,309 --> 00:00:08,159
Fargate is a serverless pay as you go compute engine

4
00:00:08,170 --> 00:00:11,770
that is compatible with Amazon Elastic Container Service

5
00:00:12,010 --> 00:00:12,550
or Amazon ECS.

6
00:00:12,720 --> 00:00:15,619
Fargate is also compatible with Amazon Elastic Kubernetes Service

7
00:00:16,010 --> 00:00:18,069
or Amazon EKS.

8
00:00:18,899 --> 00:00:19,510
Amazon

9
00:00:19,770 --> 00:00:20,909
ECS and Amazon EKS

10
00:00:21,110 --> 00:00:22,610
can schedule containers in Kubernetes pods

11
00:00:23,090 --> 00:00:25,760
onto Fargate to automatically scale,

12
00:00:25,770 --> 00:00:28,750
load balance and optimize container and pod availability.

13
00:00:29,350 --> 00:00:33,439
Fargate supports multiple CPU architectures and operating systems

14
00:00:33,450 --> 00:00:36,240
to help you run containers for a wide variety of applications.

15
00:00:38,889 --> 00:00:40,150
AWS Fargate components.

16
00:00:41,349 --> 00:00:44,380
You need to create a task definition to prepare your application

17
00:00:44,389 --> 00:00:47,220
to run on Amazon ECS with a Fargate launch type.

18
00:00:47,669 --> 00:00:50,409
The task definition is a JSON file that describes

19
00:00:50,419 --> 00:00:52,729
how one or more containers should be launched.

20
00:00:53,150 --> 00:00:55,130
You can launch an ECS service to run

21
00:00:55,139 --> 00:00:57,880
and maintain the desired number of tasks simultaneously

22
00:00:57,889 --> 00:00:58,139
in an ECS cluster.

23
00:00:59,509 --> 00:01:01,459
You will need to use a Fargate profile to

24
00:01:01,470 --> 00:01:04,669
define how Amazon EKS should run Kubernetes pods on

25
00:01:05,120 --> 00:01:05,819
AWS Fargate.

26
00:01:06,250 --> 00:01:09,260
Each Fargate profile contains a pod execution role,

27
00:01:09,269 --> 00:01:11,839
the Subnet IDs to launch pods into and the Kubernetes

28
00:01:12,169 --> 00:01:15,269
selectors to match for pods to use the Fargate profile.

29
00:01:15,540 --> 00:01:18,720
This execution role provides the necessary permissions for the

30
00:01:18,730 --> 00:01:22,080
Amazon EKS components that run on the Fargate infrastructure.

31
00:01:23,739 --> 00:01:25,800
AWS Fargate Use Cases.

32
00:01:26,629 --> 00:01:29,879
Build web apps, APIs and microservices.

33
00:01:30,489 --> 00:01:32,650
Build and deploy your applications, APIs

34
00:01:33,019 --> 00:01:35,309
and microservices architectures with the

35
00:01:35,319 --> 00:01:37,779
speed and immutability of Fargate containers,

36
00:01:38,120 --> 00:01:42,629
Remove the need to own, run, and manage the life cycle of a compute infrastructure,

37
00:01:42,639 --> 00:01:44,699
so you can focus on your applications.

38
00:01:45,970 --> 00:01:47,949
Run and scale container workloads.

39
00:01:48,629 --> 00:01:52,949
You can use Fargate to run and scale your containerized data processing workloads.

40
00:01:53,110 --> 00:01:55,330
Fargate can also be used to modernize

41
00:01:55,339 --> 00:01:58,279
applications when building new applications in the cloud

42
00:01:58,519 --> 00:02:01,400
or migrating a traditional application to the cloud.

43
00:02:02,720 --> 00:02:05,470
Support AI and ML training applications.

44
00:02:06,160 --> 00:02:07,059
With Fargate,

45
00:02:07,069 --> 00:02:11,949
you can train, test, and deploy your machine learning models at scale.

46
00:02:11,960 --> 00:02:13,729
Fargate can also be used to create a flexible

47
00:02:13,740 --> 00:02:16,660
and portable artificial intelligence and machine learning AI

48
00:02:16,809 --> 00:02:18,699
and ML development environment.

49
00:02:20,970 --> 00:02:23,990
This is the end of AWS Fargate overview video.

50
00:02:24,389 --> 00:02:25,429
Thanks for watching.


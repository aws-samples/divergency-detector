1
00:00:00,500 --> 00:00:05,150
AWS Identity and Access Management Best Practices.

2
00:00:06,380 --> 00:00:07,510
Let's take a look at

3
00:00:07,640 --> 00:00:10,500
IAM user management best practices.

4
00:00:11,610 --> 00:00:12,940
Root user access.

5
00:00:13,620 --> 00:00:14,800
As a best practice,

6
00:00:14,920 --> 00:00:16,720
it is recommended that the root user

7
00:00:16,860 --> 00:00:19,100
not be used for everyday admin tasks.

8
00:00:20,230 --> 00:00:23,660
Initially, when you first create a new AWS account,

9
00:00:23,670 --> 00:00:25,540
use the root user's credentials

10
00:00:25,620 --> 00:00:27,780
to create a primary IAM admin user,

11
00:00:27,980 --> 00:00:31,540
then securely lock the root user credentials.

12
00:00:31,760 --> 00:00:34,420
For any user, including the root user,

13
00:00:34,460 --> 00:00:37,240
apply the best practices discussed in this video.

14
00:00:39,050 --> 00:00:42,370
Enable multi-factor authentication, or MFA.

15
00:00:43,230 --> 00:00:45,940
For extra security, require MFA

16
00:00:46,080 --> 00:00:47,830
for all users in an account.

17
00:00:48,110 --> 00:00:49,700
With MFA enabled,

18
00:00:49,760 --> 00:00:51,620
users have to enter their credentials

19
00:00:51,640 --> 00:00:53,580
and the MFA-generated challenge

20
00:00:53,660 --> 00:00:55,500
to complete the sign-in process.

21
00:00:56,540 --> 00:01:00,840
So if the user's password or access keys are compromised

22
00:01:00,960 --> 00:01:05,280
your AWS account resources remain secure and protected

23
00:01:05,410 --> 00:01:07,750
due to the additional authentication requirement.

24
00:01:09,660 --> 00:01:11,070
Password complexity.

25
00:01:11,870 --> 00:01:15,140
Implement an organization-wide password policy

26
00:01:15,220 --> 00:01:17,780
that ensures users create complex passwords

27
00:01:17,820 --> 00:01:19,850
that meet requirements such as

28
00:01:20,640 --> 00:01:22,450
upper and lowercase letters,

29
00:01:23,500 --> 00:01:24,800
at least one number,

30
00:01:25,760 --> 00:01:27,800
special nonalphabetic characters

31
00:01:28,500 --> 00:01:31,360
as well as preventing password re-use

32
00:01:31,420 --> 00:01:34,140
and enforcing a minimum password length.

33
00:01:36,050 --> 00:01:37,250
Access keys.

34
00:01:38,310 --> 00:01:42,430
Access keys provide command-line access to AWS resources.

35
00:01:43,260 --> 00:01:45,320
Access keys should never be embedded within

36
00:01:45,320 --> 00:01:48,230
your applications or shared between programmers

37
00:01:48,330 --> 00:01:49,950
even if they are on the same team.

38
00:01:51,170 --> 00:01:54,860
When your applications require access to AWS resources,

39
00:01:54,900 --> 00:01:57,280
configure the program to assume an IAM role

40
00:01:57,420 --> 00:01:59,820
and retrieve temporary security credentials

41
00:01:59,860 --> 00:02:01,650
that can access those resources.

42
00:02:03,510 --> 00:02:05,490
Rotate credentials.

43
00:02:05,810 --> 00:02:09,289
Passwords and access keys should expire periodically

44
00:02:09,449 --> 00:02:10,610
and on a set schedule.

45
00:02:11,410 --> 00:02:14,920
Therefore, if a password or access key is compromised,

46
00:02:15,000 --> 00:02:16,100
you limit the time

47
00:02:16,140 --> 00:02:18,940
a hacker has access to your AWS resources.

48
00:02:20,190 --> 00:02:23,710
Use the AWS Identity and Access Management console

49
00:02:23,780 --> 00:02:27,660
to directly set how many days before a password expires.

50
00:02:28,390 --> 00:02:31,460
Rotating access keys can be managed and automated

51
00:02:31,480 --> 00:02:33,200
by using AWS Config

52
00:02:33,320 --> 00:02:36,060
and its managed rule "access-keys-rotated."

53
00:02:37,470 --> 00:02:39,250
Remove credentials.

54
00:02:39,460 --> 00:02:42,080
IAM credentials and access keys

55
00:02:42,210 --> 00:02:45,360
for users that leave the company or team should be deleted.

56
00:02:46,410 --> 00:02:49,980
If users have not used their credentials in several months,

57
00:02:50,080 --> 00:02:52,800
it might be best to disable them initially

58
00:02:52,880 --> 00:02:54,880
while clarifying their need for access.

59
00:02:56,450 --> 00:02:58,470
Confirm what type of access is needed.

60
00:02:58,620 --> 00:03:01,480
If the AWS console is the only one they use,

61
00:03:01,520 --> 00:03:04,120
then delete any programmatic access keys.

62
00:03:05,540 --> 00:03:09,320
If they need programmatic access or command-line access only,

63
00:03:09,400 --> 00:03:11,920
then disable their AWS console password.

64
00:03:13,410 --> 00:03:17,150
AWS IAM Roles - Best Practices.

65
00:03:18,230 --> 00:03:20,180
Using IAM roles.

66
00:03:20,280 --> 00:03:23,820
You can use IAM roles to delegate access

67
00:03:23,860 --> 00:03:27,040
to applications, users, or services

68
00:03:27,140 --> 00:03:29,550
that need to connect to AWS resources.

69
00:03:30,410 --> 00:03:33,360
IAM roles eliminate the need for access

70
00:03:33,400 --> 00:03:36,760
keys and passwords which can easily be compromised.

71
00:03:37,790 --> 00:03:42,180
IAM roles grant temporary access for a limited amount of time,

72
00:03:42,260 --> 00:03:45,710
which lowers the risk of your credentials being compromised.

73
00:03:46,930 --> 00:03:48,540
For IAM users,

74
00:03:48,600 --> 00:03:51,550
create separate IAM roles for different job tasks

75
00:03:51,640 --> 00:03:54,700
and allow them to assume those roles to perform those tasks.

76
00:03:56,340 --> 00:03:59,070
EC2 instance profiles.

77
00:03:59,270 --> 00:04:02,160
For applications hosted on Amazon EC2,

78
00:04:02,160 --> 00:04:04,300
the best practice is for temporary

79
00:04:04,300 --> 00:04:07,100
credentials to be delegated to the application

80
00:04:07,110 --> 00:04:08,980
by using an instance profile

81
00:04:09,060 --> 00:04:11,460
and assigning it to the Amazon EC2 instance.

82
00:04:12,930 --> 00:04:16,279
Instance profiles are similar to IAM roles and

83
00:04:16,970 --> 00:04:19,680
can be assigned directly to one or more

84
00:04:19,740 --> 00:04:21,720
Amazon EC2 instances.

85
00:04:22,330 --> 00:04:25,790
The temporary credentials are rotated automatically for you.

86
00:04:26,600 --> 00:04:28,380
The IAM role assigned to your

87
00:04:28,520 --> 00:04:31,810
EC2 instance can be changed without incurring downtime,

88
00:04:31,960 --> 00:04:33,860
making it easy to grant permissions

89
00:04:33,900 --> 00:04:36,160
and reducing application development time.


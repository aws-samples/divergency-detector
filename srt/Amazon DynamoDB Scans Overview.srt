1
00:00:00,000 --> 00:00:03,120
Amazon DynamoDB Scans - Overview.

2
00:00:03,860 --> 00:00:09,850
A scan operation in Amazon DynamoDB reads every item in a table or a secondary index.

3
00:00:12,200 --> 00:00:13,010
By default,

4
00:00:13,020 --> 00:00:15,780
a scan operation returns all of the data attributes

5
00:00:15,790 --> 00:00:18,100
for every item in the table or index.

6
00:00:18,180 --> 00:00:22,170
Therefore, the best practice is to avoid using a scan operation on a

7
00:00:22,170 --> 00:00:25,660
large table or index with a filter that removes many results.

8
00:00:25,680 --> 00:00:30,350
A single scan operation can retrieve a maximum of one megabyte of data.

9
00:00:31,300 --> 00:00:38,250
For example, here is a DynamoDB scan using the AWS Command Line Interface, or AWS CLI.

10
00:00:38,350 --> 00:00:42,760
The DynamoDB scan CLI command is used to scan the Music table.

11
00:00:42,780 --> 00:00:46,050
You can use the projection expression parameter so that scan

12
00:00:46,050 --> 00:00:48,720
only returns some attributes rather than all of them.

13
00:00:48,760 --> 00:00:49,490
In this case,

14
00:00:49,640 --> 00:00:52,050
only the Album attribute values are returned.

15
00:00:52,780 --> 00:00:54,950
If you need to further refine the scan results,

16
00:00:55,060 --> 00:00:57,240
you can optionally provide a filter expression.

17
00:00:57,840 --> 00:01:00,450
A filter expression determines which items within the

18
00:01:00,450 --> 00:01:02,990
scan results should be returned to you.

19
00:01:03,000 --> 00:01:05,470
A filter expression is applied only after the

20
00:01:05,470 --> 00:01:08,040
entire table is scanned or scan finishes.

21
00:01:08,050 --> 00:01:12,330
The expression does not consume any additional read capacity units.

22
00:01:12,860 --> 00:01:13,620
With scan,

23
00:01:13,630 --> 00:01:16,600
you can specify any attributes in a filter expression,

24
00:01:16,640 --> 00:01:19,060
including partition key and sort key attributes.

25
00:01:19,120 --> 00:01:24,010
The syntax for a filter expression is identical to that of a condition expression.

26
00:01:24,020 --> 00:01:27,660
Filter expressions can use the same comparators, functions,

27
00:01:27,670 --> 00:01:30,200
and logical operators as a condition expression.

28
00:01:30,970 --> 00:01:31,980
In this example,

29
00:01:31,990 --> 00:01:34,660
it filters the scan results by Artist 2.

30
00:01:34,680 --> 00:01:38,200
Therefore, only the list of albums by Artist 2 are returned.

31
00:01:39,520 --> 00:01:41,830
Now, let's look at some of the key features.

32
00:01:42,570 --> 00:01:44,970
Limiting the number of items in the result set.

33
00:01:44,980 --> 00:01:48,130
You can limit the number of items in the result set by setting

34
00:01:48,130 --> 00:01:51,750
the limit parameter to the maximum number of items that you want

35
00:01:51,760 --> 00:01:54,420
prior to filter expression evaluation.

36
00:01:54,460 --> 00:01:55,400
For example,

37
00:01:55,460 --> 00:01:59,940
suppose that you scan a table with a limit value of 4 and without a filter expression.

38
00:01:59,970 --> 00:02:03,320
The scan result contains the first four items from the table

39
00:02:03,360 --> 00:02:06,130
that match the key condition expression from the request.

40
00:02:06,140 --> 00:02:09,330
Now, suppose that you had a filter expression to the scan.

41
00:02:09,650 --> 00:02:10,410
In this case,

42
00:02:10,430 --> 00:02:14,500
DynamoDB applies the filter expression to the four items that were returned,

43
00:02:14,520 --> 00:02:16,440
discarding those that do not match.

44
00:02:16,490 --> 00:02:19,450
The final scan result contains four items or fewer,

45
00:02:19,470 --> 00:02:21,750
depending on the number of items that were filtered.

46
00:02:22,780 --> 00:02:24,880
Counting the items in the results.

47
00:02:25,080 --> 00:02:29,220
The scan response contains the following elements, ScannedCount and Count.

48
00:02:29,940 --> 00:02:33,000
ScannedCount is the number of items evaluated or scanned

49
00:02:33,080 --> 00:02:35,230
before any scan filter is applied.

50
00:02:35,240 --> 00:02:39,950
Count is the number of items that remain after a filter expression was applied.

51
00:02:40,530 --> 00:02:44,220
If the size of the scan result set is larger than one megabyte,

52
00:02:44,270 --> 00:02:48,270
ScannedCount and Count represent only a partial count of the total items.

53
00:02:48,320 --> 00:02:52,400
You need to perform multiple scan operations to retrieve all the results.

54
00:02:53,940 --> 00:02:55,600
Read consistency for scan.

55
00:02:56,360 --> 00:03:00,970
A scan operation performs eventually consistent reads by default.

56
00:03:00,980 --> 00:03:04,950
This means that the scan results might not reflect the latest changes

57
00:03:04,960 --> 00:03:08,820
due to a recently completed PutItem or an UpdateItem operation.

58
00:03:08,830 --> 00:03:11,380
If you require strongly consistent reads,

59
00:03:11,460 --> 00:03:14,830
set the consistent read parameter to true in the scan request.

60
00:03:14,840 --> 00:03:19,080
Note that a scan operation which performs strongly consistent reads

61
00:03:19,090 --> 00:03:21,780
consumes twice as many read capacity units

62
00:03:21,820 --> 00:03:24,640
as compared to the default eventually consistent reads.


1
00:00:00,110 --> 00:00:02,660
Amazon DynamoDB Scans - Features.

2
00:00:02,990 --> 00:00:04,380
Here are the key features.

3
00:00:04,990 --> 00:00:07,200
Capacity units consumed by scan.

4
00:00:07,710 --> 00:00:10,550
If you scan a table, DynamoDB consumes read

5
00:00:10,550 --> 00:00:13,790
capacity units, or RCUs, from the table's provisioned read capacity.

6
00:00:14,400 --> 00:00:17,120
If you scan a global secondary index, or GSI,

7
00:00:17,130 --> 00:00:22,260
DynamoDB consumes read capacity units, or RCUs, from the index's provisioned read capacity.

8
00:00:23,010 --> 00:00:25,160
In the case of a local secondary index, or

9
00:00:25,160 --> 00:00:29,870
LSI, DynamoDB consumes read capacity units from the base tables provisioned

10
00:00:29,870 --> 00:00:30,840
Read capacity.

11
00:00:31,370 --> 00:00:36,330
DynamoDB calculates the number of read capacity units consumed based on item size,

12
00:00:36,450 --> 00:00:39,170
not on the amount of data that has returned to an application.

13
00:00:40,890 --> 00:00:42,150
Paginating the results.

14
00:00:42,830 --> 00:00:43,900
With pagination,

15
00:00:43,970 --> 00:00:48,850
the scan results are divided into pages of data that are one megabyte in size or less.

16
00:00:49,660 --> 00:00:51,120
An application can process

17
00:00:51,270 --> 00:00:52,560
the first page of results,

18
00:00:52,670 --> 00:00:54,300
then the second page, and so on.

19
00:00:54,990 --> 00:00:57,000
To determine whether there are more results,

20
00:00:57,010 --> 00:01:00,540
you need to scan with the debug mode in order to examine the low-level

21
00:01:00,580 --> 00:01:04,500
scan result and check if the result contains the LastEvaluatedKey element.

22
00:01:05,140 --> 00:01:06,120
In this example,

23
00:01:06,240 --> 00:01:07,550
the page size parameter

24
00:01:07,780 --> 00:01:09,670
limits the number of items per page.

25
00:01:10,310 --> 00:01:13,940
The scan result contains information in the LastEvaluatedKey.

26
00:01:13,950 --> 00:01:17,780
This indicates that there are more results data available for the operation.

27
00:01:18,550 --> 00:01:20,680
To retrieve the next page of information,

28
00:01:20,730 --> 00:01:25,260
you will need to set the ExclusiveStartKey value for the LastEvaluatedKey value

29
00:01:25,370 --> 00:01:26,310
and scan again

30
00:01:26,420 --> 00:01:29,880
until the absence of the LastEvaluatedKey in the query result.

31
00:01:30,400 --> 00:01:32,520
When there is no LastEvaluatedKey,

32
00:01:32,620 --> 00:01:34,750
you have retrieved the final page of results.

33
00:01:35,840 --> 00:01:40,340
Parallel Scan. First, let's understand why parallel scan.

34
00:01:41,080 --> 00:01:43,750
By default, the scan operation is sequential.

35
00:01:44,310 --> 00:01:47,420
However, the larger the table or index being scanned,

36
00:01:47,450 --> 00:01:49,910
the more time the scan takes to complete.

37
00:01:50,470 --> 00:01:51,160
In addition,

38
00:01:51,170 --> 00:01:53,160
a sequential scan might not always be able

39
00:01:53,160 --> 00:01:56,080
to fully use the provisioned read-throughput capacity.

40
00:01:56,910 --> 00:02:00,020
Since a scan operation can only read one partition at a time,

41
00:02:01,940 --> 00:02:03,980
the throughput of a scan is constrained

42
00:02:03,980 --> 00:02:06,260
by the maximum throughput of a single partition.

43
00:02:07,040 --> 00:02:08,360
To address these issues,

44
00:02:08,370 --> 00:02:12,590
the scan operation can logically divide a table or secondary index into

45
00:02:12,590 --> 00:02:15,550
multiple segments. With multiple application workers

46
00:02:15,560 --> 00:02:17,580
scanning the segments in parallel,

47
00:02:17,590 --> 00:02:20,720
each worker can be a thread in programming languages

48
00:02:20,720 --> 00:02:23,960
that support multithreading or an operating-system process.

49
00:02:24,610 --> 00:02:26,280
To perform a parallel scan,

50
00:02:26,290 --> 00:02:28,550
each worker issues its own scan request

51
00:02:28,570 --> 00:02:31,140
with the Segment and Total Segments parameters.

52
00:02:31,840 --> 00:02:35,770
The Segment Parameter is the segment to be scanned by a particular worker.

53
00:02:35,780 --> 00:02:38,390
The first segment number is always zero.

54
00:02:38,400 --> 00:02:41,230
Each worker should use a different value for segment.

55
00:02:42,140 --> 00:02:46,770
The Total Segments parameter is the total number of segments for the parallel scan.

56
00:02:46,780 --> 00:02:51,560
This value must be the same as the number of workers that your application will use.

57
00:02:52,210 --> 00:02:53,320
After each scan,

58
00:02:53,330 --> 00:02:54,760
if there is more data,

59
00:02:54,770 --> 00:02:58,660
the worker will set the LastEvaluatedKey, or LEK, value to the ExclusiveStartKey, or ESK,

60
00:02:58,660 --> 00:03:02,540
value and scan again until the LastEvaluatedKey value is null.

61
00:03:02,580 --> 00:03:04,930
This indicates that there is no more data.


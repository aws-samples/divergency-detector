1
00:00:00,130 --> 00:00:01,980
Amazon EMR Overview.

2
00:00:03,210 --> 00:00:07,960
Amazon EMR is a managed cluster resource that helps you run big data frameworks,

3
00:00:08,090 --> 00:00:10,440
such as Apache Hadoop and Apache Spark,

4
00:00:10,440 --> 00:00:13,490
on AWS to process vast amounts of data

5
00:00:13,490 --> 00:00:16,710
for analytics purposes and business-intelligence workloads.

6
00:00:17,530 --> 00:00:18,980
With Amazon EMR,

7
00:00:19,100 --> 00:00:22,670
you can also transform and move large amounts of data into and out of other

8
00:00:22,680 --> 00:00:25,030
AWS datastores and databases,

9
00:00:25,160 --> 00:00:28,950
such as Amazon Simple Storage Service, or Amazon S3,

10
00:00:29,120 --> 00:00:30,820
and Amazon DynamoDB.

11
00:00:33,070 --> 00:00:37,530
Amazon EMR consists of a cluster made up of Amazon Elastic Compute Cloud,

12
00:00:37,630 --> 00:00:40,780
or Amazon EC2, instances called nodes.

13
00:00:40,990 --> 00:00:45,080
Each node contains different software components based on the role of the node.

14
00:00:45,300 --> 00:00:49,330
The primary node manages the cluster by distributing tasks to other nodes.

15
00:00:49,770 --> 00:00:52,980
The primary node also monitors the status of the tasks.

16
00:00:53,290 --> 00:00:57,270
A core node runs tasks and stores the data on the cluster's file system.

17
00:00:57,530 --> 00:01:00,770
A task node only runs tasks and does not store data.

18
00:01:01,200 --> 00:01:02,440
These nodes are optional.

19
00:01:04,450 --> 00:01:06,080
Benefits and features.

20
00:01:06,270 --> 00:01:07,300
User-friendly.

21
00:01:07,650 --> 00:01:10,550
You can launch an Amazon EMR cluster in minutes.

22
00:01:10,850 --> 00:01:14,710
You don't need to worry about infrastructure provisioning, cluster setup,

23
00:01:14,720 --> 00:01:16,590
configuration, or tuning.

24
00:01:16,900 --> 00:01:20,020
And you can let your Amazon EMR cluster automatically manage

25
00:01:20,020 --> 00:01:23,380
the compute resources to meet your usage and performance needs.

26
00:01:23,690 --> 00:01:25,420
Open-source applications.

27
00:01:25,740 --> 00:01:28,060
With version releases on Amazon EMR,

28
00:01:28,240 --> 00:01:30,190
you can quickly select and use the latest

29
00:01:30,190 --> 00:01:32,840
open-source projects on your Amazon EMR cluster,

30
00:01:33,000 --> 00:01:36,890
including applications in the Apache Spark and Hadoop ecosystems.

31
00:01:37,920 --> 00:01:38,860
Low cost.

32
00:01:39,250 --> 00:01:43,820
Some of the features that make Amazon EMR low cost include low pricing per second,

33
00:01:43,950 --> 00:01:45,990
Amazon EC2 spot integration,

34
00:01:46,140 --> 00:01:48,690
Amazon EC2 reserved-instance integration,

35
00:01:48,850 --> 00:01:50,610
and Amazon S3 integration.

36
00:01:52,450 --> 00:01:56,430
Use cases. Perform big data analytics.

37
00:01:56,450 --> 00:02:00,700
Run large-scale data processing and what-if analysis using statistical

38
00:02:00,700 --> 00:02:04,940
algorithms and predictive models to uncover hidden patterns and market trends.

39
00:02:05,990 --> 00:02:08,090
Process real-time data streams.

40
00:02:08,500 --> 00:02:11,430
Analyze events from streaming data sources in real time

41
00:02:11,430 --> 00:02:14,160
to create fault-tolerant streaming data pipelines.

42
00:02:16,620 --> 00:02:19,220
Accelerate data science and ML adoption.

43
00:02:19,500 --> 00:02:22,740
Analyze data using open-source machine learning frameworks,

44
00:02:22,860 --> 00:02:25,730
such as Apache Spark MLlib, TensorFlow,

45
00:02:25,880 --> 00:02:27,070
and Apache MXNet.

46
00:02:27,610 --> 00:02:31,380
Connect to Amazon Sagemaker Studio for large-scale model training,

47
00:02:31,500 --> 00:02:33,250
analysis, and reporting.


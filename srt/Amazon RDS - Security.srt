1
00:00:00,000 --> 00:00:03,840
Amazon Relational Database Service (RDS) Features - Security.

2
00:00:04,530 --> 00:00:05,970
Here are the key features.

3
00:00:06,600 --> 00:00:08,070
Network isolation.

4
00:00:08,080 --> 00:00:11,580
AWS recommends that you run your database instances

5
00:00:11,600 --> 00:00:14,080
in a virtual private cloud, or VPC,

6
00:00:14,100 --> 00:00:17,340
which allows you to isolate your database in your virtual network.

7
00:00:17,900 --> 00:00:22,030
VPC enables you to run a DB instance within a private subnet,

8
00:00:22,160 --> 00:00:25,180
making it secure from direct public routes on the internet.

9
00:00:25,190 --> 00:00:29,020
You can control network access to your DB instances in VPC

10
00:00:29,020 --> 00:00:31,340
using security groups at the instance level

11
00:00:31,350 --> 00:00:33,500
and network ACLs in the subnet level.

12
00:00:34,210 --> 00:00:37,900
VPC traffic is connected to your on-premises IT infrastructure

13
00:00:38,040 --> 00:00:41,020
using industry-standard encrypted IPsec VPNs

14
00:00:41,160 --> 00:00:42,500
and can be further inspected

15
00:00:42,640 --> 00:00:44,840
by your on-premises security infrastructure,

16
00:00:45,000 --> 00:00:48,100
including network firewalls and intrusion detection systems.

17
00:00:49,640 --> 00:00:51,730
Resource-level permissions.

18
00:00:51,740 --> 00:00:57,860
Amazon RDS is integrated with AWS Identity and Access Management, or AWS IAM.

19
00:00:58,440 --> 00:01:00,940
It provides you the ability to control the actions

20
00:01:01,050 --> 00:01:06,350
that your AWS IAM users and groups can take on specific Amazon RDS resources,

21
00:01:06,480 --> 00:01:08,760
from database instances through snapshots,

22
00:01:08,890 --> 00:01:10,780
parameter groups, and option groups.

23
00:01:11,710 --> 00:01:14,440
You can also tag your Amazon RDS resources

24
00:01:14,500 --> 00:01:17,060
and control the actions that your IAM users and groups

25
00:01:17,140 --> 00:01:18,800
can take on groups of resources

26
00:01:18,820 --> 00:01:21,180
that have the same tag and associated value.

27
00:01:22,100 --> 00:01:22,860
For example,

28
00:01:22,880 --> 00:01:24,600
you can configure your IAM rules

29
00:01:24,680 --> 00:01:28,320
to ensure developers are able to modify development database instances,

30
00:01:28,320 --> 00:01:30,180
but only database administrators

31
00:01:30,180 --> 00:01:32,680
can make changes to production database instances.

32
00:01:34,260 --> 00:01:36,200
Encryption at rest and in transit.

33
00:01:36,220 --> 00:01:39,500
Amazon RDS allows you to encrypt your databases

34
00:01:39,500 --> 00:01:44,220
using keys you manage through AWS Key Management Service, or AWS KMS.

35
00:01:44,220 --> 00:01:49,100
The database uses a customer master key stored in AWS KMS

36
00:01:49,100 --> 00:01:52,820
to encrypt the data keys which encrypt the data at rest in the database.

37
00:01:53,390 --> 00:01:57,880
Its automated backups, read replicas, and snapshots are also encrypted.

38
00:01:59,920 --> 00:02:05,280
Amazon RDS supports transparent data encryptio, or TDE, and SQL Server, and Oracle.

39
00:02:05,340 --> 00:02:10,690
Transparent data encryption in Oracle is integrated with AWS CloudHSM,

40
00:02:10,710 --> 00:02:13,220
which allows you to securely generate, store,

41
00:02:13,220 --> 00:02:16,260
and manage your cryptographic TDE master encryption keys

42
00:02:16,280 --> 00:02:19,480
in single-tenant hardware security module, or HSM,

43
00:02:19,500 --> 00:02:21,580
appliances within the AWS Cloud.

44
00:02:22,490 --> 00:02:26,980
With TDE, the database software encrypts data before storing it on disk.

45
00:02:27,590 --> 00:02:30,680
In addition, Amazon RDS secures data in transit.

46
00:02:31,240 --> 00:02:36,120
You can use Secure Socket Layer, or SSL, or Transport Layer Security, or TLS,

47
00:02:36,140 --> 00:02:40,090
from your application to encrypt a connection to an RDS DB instance.


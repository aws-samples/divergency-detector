1
00:00:00,000 --> 00:00:03,090
AWS Step Functions - More Features.

2
00:00:03,870 --> 00:00:05,540
Built-in error handling.

3
00:00:05,550 --> 00:00:09,790
AWS Step Functions automatically handles errors and exceptions,

4
00:00:09,800 --> 00:00:12,380
whether the task takes seconds or months to complete.

5
00:00:12,390 --> 00:00:15,800
You can automatically retry failed or timed-out tasks,

6
00:00:15,840 --> 00:00:18,040
respond differently to different types of errors,

7
00:00:18,080 --> 00:00:19,870
and recover gracefully by falling

8
00:00:19,870 --> 00:00:22,700
back to designated cleanup and recovery code.

9
00:00:23,650 --> 00:00:25,470
History of each execution.

10
00:00:25,480 --> 00:00:29,180
AWS Step Functions integrates with Amazon CloudWatch

11
00:00:29,200 --> 00:00:33,750
and AWS CloudTrail to deliver real-time diagnostics and dashboards.

12
00:00:33,760 --> 00:00:39,160
It logs every execution, including overall state, failed steps, inputs, and outputs.

13
00:00:39,870 --> 00:00:43,500
If things go wrong, you can quickly troubleshoot and remediate failures.

14
00:00:44,590 --> 00:00:46,100
Visual monitoring.

15
00:00:46,110 --> 00:00:49,260
Launching an application is as simple as pressing a button,

16
00:00:49,300 --> 00:00:51,460
then watching the steps execute visually,

17
00:00:51,500 --> 00:00:53,440
so you can quickly verify that everything

18
00:00:53,440 --> 00:00:55,690
is operating in order and as expected.

19
00:00:56,530 --> 00:00:58,520
The console clearly highlights errors,

20
00:00:58,580 --> 00:01:02,070
so you can quickly pinpoint their root cause and troubleshoot issues.

21
00:01:02,750 --> 00:01:03,910
High availability.

22
00:01:04,590 --> 00:01:07,680
AWS Step Functions has built-in fault tolerance

23
00:01:07,740 --> 00:01:11,300
and maintains service capacity across multiple Availability Zones

24
00:01:11,400 --> 00:01:13,830
in each Region to protect applications

25
00:01:13,860 --> 00:01:16,890
against individual machine or data-center failures.

26
00:01:18,040 --> 00:01:19,500
Automatic scaling.

27
00:01:19,620 --> 00:01:22,360
AWS Step Functions automatically

28
00:01:22,360 --> 00:01:25,050
scales the operations and underlying compute to

29
00:01:25,050 --> 00:01:28,920
run the steps of your application for you, in response to changing workloads.

30
00:01:29,460 --> 00:01:32,180
It ensures the performance of your application workflow

31
00:01:32,260 --> 00:01:35,260
remains consistent as the frequency of requests increases.

32
00:01:36,500 --> 00:01:37,900
Security and compliance.

33
00:01:38,550 --> 00:01:45,060
AWS Step Functions is integrated with AWS Identity and Access Management, or AWS IAM,

34
00:01:45,180 --> 00:01:48,320
and recommends a least-privileged IAM policy

35
00:01:48,480 --> 00:01:50,990
for all of the resources used in your workflow.

36
00:01:51,730 --> 00:01:54,140
Step Functions is a HIPAA-eligible service,

37
00:01:54,140 --> 00:01:58,080
and can be used with applications containing healthcare-related information,

38
00:01:58,080 --> 00:02:00,460
such as personal health information, or PHI.

39
00:02:01,240 --> 00:02:03,700
AWS Step Functions is also compliant

40
00:02:03,700 --> 00:02:06,970
with SOC, or System and Organization Controls, measures.

41
00:02:08,190 --> 00:02:09,260
Pay per use.

42
00:02:09,500 --> 00:02:11,400
With AWS Step Functions,

43
00:02:11,420 --> 00:02:14,420
you pay for each transition from one state to the next.

44
00:02:14,430 --> 00:02:17,000
Billing is metered by state transition.

45
00:02:17,550 --> 00:02:19,280
You do not pay for idle time,

46
00:02:19,330 --> 00:02:22,730
regardless of how long each state persists - up to one year.

47
00:02:23,400 --> 00:02:25,580
This keeps Step Functions cost-effective

48
00:02:25,710 --> 00:02:28,550
as you scale from a few executions to tens of millions.

49
00:02:29,730 --> 00:02:31,540
High-volume orchestration.

50
00:02:31,550 --> 00:02:34,860
AWS Step Functions adds express workflows

51
00:02:34,900 --> 00:02:38,080
that are suitable for high- volume, short-duration workflows,

52
00:02:38,160 --> 00:02:41,490
such as streaming data processing and IoT data ingestion.

53
00:02:42,080 --> 00:02:47,160
Express workflows support event rates greater than 100,000 per second.

54
00:02:47,170 --> 00:02:53,940
Express workflows can coordinate AWS Lambda function invocations, AWS IoT rules engine actions,

55
00:02:53,940 --> 00:02:55,800
and Amazon EventBridge events

56
00:02:55,940 --> 00:02:59,300
from over 100 AWS third-party SaaS event sources.


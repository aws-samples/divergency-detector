1
00:00:00,270 --> 00:00:02,160
AWS CodeCommit Features.

2
00:00:03,570 --> 00:00:04,920
Here are the key features.

3
00:00:05,780 --> 00:00:09,290
AWS CodeCommit is designed for collaborative software development.

4
00:00:10,320 --> 00:00:11,970
You can easily commit,

5
00:00:11,980 --> 00:00:13,850
branch, and merge your code,

6
00:00:13,880 --> 00:00:17,450
allowing you to easily maintain control of your team's projects.

7
00:00:18,190 --> 00:00:20,570
CodeCommit also supports pull requests,

8
00:00:20,670 --> 00:00:23,450
which provide a mechanism to request code reviews

9
00:00:23,600 --> 00:00:25,470
and discuss code with collaborators.

10
00:00:26,570 --> 00:00:30,090
You can create a repository from the AWS Management Console,

11
00:00:30,100 --> 00:00:36,440
AWS CLI, or AWS SDKs and start working with the repository using Git.

12
00:00:37,850 --> 00:00:38,690
Encryption.

13
00:00:39,580 --> 00:00:42,540
You can transfer your files to and from AWS CodeCommit

14
00:00:42,700 --> 00:00:46,000
using HTTPS or SSH as you prefer.

15
00:00:46,700 --> 00:00:49,540
Your repositories are also automatically encrypted at rest

16
00:00:49,740 --> 00:00:53,200
through AWS Key Management Service, or AWS KMS,

17
00:00:53,380 --> 00:00:54,980
using customer-specific keys.

18
00:00:57,190 --> 00:00:58,330
Access control.

19
00:00:59,530 --> 00:01:05,020
AWS CodeCommit uses AWS Identity and Access Management, or AWS IAM,

20
00:01:05,080 --> 00:01:07,440
to control and monitor who can access your data

21
00:01:07,860 --> 00:01:10,480
as well as how, when, and where they can access it.

22
00:01:11,910 --> 00:01:14,520
CodeCommit also helps you monitor your repositories

23
00:01:14,520 --> 00:01:18,230
via AWS CloudTrail and Amazon CloudWatch.

24
00:01:19,840 --> 00:01:21,940
High availability and durability.

25
00:01:22,820 --> 00:01:28,730
AWS CodeCommit stores your repositories in Amazon S3 and Amazon DynamoDB.

26
00:01:29,970 --> 00:01:34,410
Git objects are stored in S3 while Git indexes are stored in DynamoDB.

27
00:01:36,550 --> 00:01:40,100
Your encrypted data is redundantly stored across multiple facilities.

28
00:01:40,860 --> 00:01:43,230
This architecture increases the availability

29
00:01:43,300 --> 00:01:45,590
and durability of your repository data.

30
00:01:47,940 --> 00:01:49,590
Unlimited repositories.

31
00:01:50,160 --> 00:01:54,550
AWS CodeCommit allows you to create as many repositories as you need,

32
00:01:54,560 --> 00:01:59,010
with up to 1,000 repositories by default and no limits upon request.

33
00:01:59,720 --> 00:02:02,060
You can securely store anything,

34
00:02:02,220 --> 00:02:05,840
such as source code, binaries, images, and libraries, and more.

35
00:02:06,980 --> 00:02:09,430
You can also version-control all these files.

36
00:02:11,500 --> 00:02:13,450
Easy access and integration.

37
00:02:14,460 --> 00:02:18,190
You can use the AWS Management Console, or AWS CLI,

38
00:02:18,200 --> 00:02:21,240
and AWS SDKs to manage your repositories.

39
00:02:22,370 --> 00:02:25,280
You can also use Git commands or Git graphical tools

40
00:02:25,480 --> 00:02:27,890
to interact with your repository source files.

41
00:02:28,830 --> 00:02:31,560
AWS CodeCommit supports all Git commands

42
00:02:31,680 --> 00:02:33,660
and works with your existing Git tools.

43
00:02:34,870 --> 00:02:37,740
You can integrate with your development environment plug-ins

44
00:02:37,880 --> 00:02:41,620
or continuous-integration, continuous-delivery, or CI/CD, systems.

45
00:02:43,840 --> 00:02:45,700
Notifications and custom scripts.

46
00:02:46,870 --> 00:02:50,420
You can now receive notifications for events impacting your repositories.

47
00:02:51,310 --> 00:02:53,980
You can set up notification rules for a repository,

48
00:02:54,520 --> 00:02:56,720
so that repository users receive emails

49
00:02:57,180 --> 00:02:59,650
about the repository event types you specify.

50
00:03:00,330 --> 00:03:01,210
For example,

51
00:03:01,210 --> 00:03:04,200
you can configure a notification rule to send notifications

52
00:03:04,560 --> 00:03:06,360
when comments are made on commits.

53
00:03:07,210 --> 00:03:11,020
Notifications will come in the form of Amazon SNS notifications.

54
00:03:12,040 --> 00:03:14,620
Each notification will include a status message

55
00:03:14,940 --> 00:03:16,680
as well as a link to the resources

56
00:03:16,820 --> 00:03:18,970
whose event generated that notification.

57
00:03:20,280 --> 00:03:24,220
Additionally, using AWS CodeCommit repository triggers,

58
00:03:24,470 --> 00:03:29,910
you can send notifications and create HTTP webhooks with an Amazon SNS.

59
00:03:30,820 --> 00:03:31,530
For example,

60
00:03:31,530 --> 00:03:33,350
you can configure triggers to send emails to

61
00:03:33,350 --> 00:03:36,410
subscribed users when a pull request is created.

62
00:03:37,100 --> 00:03:39,970
You can also invoke AWS Lambda functions in

63
00:03:39,970 --> 00:03:42,220
response to the repository events you choose.

64
00:03:43,010 --> 00:03:43,920
For example,

65
00:03:43,920 --> 00:03:47,750
you can configure to trigger a Lambda function when a new commit is pushed.

66
00:03:47,760 --> 00:03:52,570
AWS Lambda then uploads the code from the repository to an S3 bucket.


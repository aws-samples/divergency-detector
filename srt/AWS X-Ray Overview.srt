1
00:00:00,150 --> 00:00:01,940
AWS X-Ray Overview.

2
00:00:03,350 --> 00:00:07,430
AWS X-Ray helps developers analyze and debug production,

3
00:00:07,440 --> 00:00:12,140
distributed applications such as those built using a microservices architecture.

4
00:00:13,300 --> 00:00:13,990
With X-Ray,

5
00:00:13,990 --> 00:00:15,880
you can understand how your application

6
00:00:15,890 --> 00:00:17,820
and its underlying services are performing

7
00:00:17,820 --> 00:00:21,960
to identify and troubleshoot the root cause of performance issues and errors.

8
00:00:24,090 --> 00:00:25,400
Here are the key benefits.

9
00:00:26,280 --> 00:00:27,710
Review request behavior.

10
00:00:28,620 --> 00:00:30,970
AWS X-Ray traces user requests

11
00:00:31,100 --> 00:00:33,300
as they travel through your entire application.

12
00:00:34,670 --> 00:00:37,170
It aggregates the data generated by the individual

13
00:00:37,170 --> 00:00:40,050
services and resources that make up your application,

14
00:00:40,060 --> 00:00:44,000
providing you an end-to-end view of how your application is performing.

15
00:00:45,050 --> 00:00:48,280
The data gathered from individual services in your application

16
00:00:48,410 --> 00:00:50,320
into a single unit is called a trace.

17
00:00:52,210 --> 00:00:53,890
Discover application issues.

18
00:00:54,630 --> 00:00:56,260
With X-Ray's tracing features,

19
00:00:56,270 --> 00:00:59,450
you can follow request paths to pinpoint where in your application

20
00:00:59,560 --> 00:01:01,350
and what is causing performance issues.

21
00:01:02,730 --> 00:01:05,500
X-Ray annotations also make it possible to tag

22
00:01:05,640 --> 00:01:07,800
and filter trace data with the appended metadata,

23
00:01:08,040 --> 00:01:10,800
which helps discover patterns and diagnose issues.

24
00:01:12,410 --> 00:01:14,170
Improve application performance.

25
00:01:15,070 --> 00:01:18,340
AWS X-Ray helps you identify performance bottlenecks.

26
00:01:19,290 --> 00:01:21,940
You can easily detect where high latencies are occurring

27
00:01:22,120 --> 00:01:25,550
and visualize node and edge latency distribution for services.

28
00:01:26,450 --> 00:01:27,990
And you can drill down into the

29
00:01:27,990 --> 00:01:31,700
specific services and paths impacting application performance.

30
00:01:33,090 --> 00:01:34,880
Ready to use with AWS.

31
00:01:35,820 --> 00:01:41,370
AWS X-Ray works with Amazon EC2, Amazon Elastic Container Service, or Amazon ECS,

32
00:01:41,380 --> 00:01:44,660
AWS Lambda, and AWS Elastic Beanstalk.

33
00:01:45,610 --> 00:01:47,420
You can use X-Ray with applications

34
00:01:47,560 --> 00:01:49,070
that are deployed on these services.

35
00:01:50,570 --> 00:01:52,740
Designed for a variety of applications.

36
00:01:53,660 --> 00:01:57,670
AWS X-Ray works for both simple and complex applications,

37
00:01:57,680 --> 00:01:59,740
either in development or in production.

38
00:02:00,530 --> 00:02:02,840
You can analyze simple synchronous event calls,

39
00:02:02,880 --> 00:02:06,730
3-tier web applications, or complex microservices applications

40
00:02:06,850 --> 00:02:08,810
consisting of thousands of services.

41
00:02:09,970 --> 00:02:10,620
With X-Ray,

42
00:02:10,620 --> 00:02:14,840
you can trace requests made to applications that span multiple AWS accounts,

43
00:02:14,850 --> 00:02:17,860
AWS Regions, and Availability Zones.

44
00:02:19,720 --> 00:02:20,930
Here's how it works.

45
00:02:21,710 --> 00:02:23,500
First, collect traces.

46
00:02:23,800 --> 00:02:26,760
AWS X-Ray collects data about the request

47
00:02:27,060 --> 00:02:30,240
from each of the underlying application services it passes through.

48
00:02:31,110 --> 00:02:32,750
Then record traces.

49
00:02:32,760 --> 00:02:35,240
X-Ray combines the data gathered from

50
00:02:35,240 --> 00:02:38,250
each service into singular units called traces.

51
00:02:39,290 --> 00:02:40,070
With the traces,

52
00:02:40,070 --> 00:02:43,590
it creates the service map, which is an aggregated view of the traces.

53
00:02:43,600 --> 00:02:46,800
A service map shows trace data such as latencies,

54
00:02:46,800 --> 00:02:51,220
HTTP statuses, and metadata for each service.

55
00:02:51,980 --> 00:02:53,430
With this information provided,

56
00:02:53,730 --> 00:02:55,080
you can then analyze issues.

57
00:02:56,110 --> 00:03:00,840
You can drill into the service showing unusual behavior to identify the root issue.

58
00:03:02,160 --> 00:03:07,010
AWS X-Ray makes it easy for developers to quickly find and address problems

59
00:03:07,010 --> 00:03:09,560
in their applications and improve the experience

60
00:03:09,560 --> 00:03:11,520
for end users of their applications.


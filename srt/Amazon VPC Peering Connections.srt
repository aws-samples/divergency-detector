1
00:00:00,000 --> 00:00:02,920
Amazon Virtual Private Cloud (VPC)

2
00:00:03,020 --> 00:00:04,630
Peering Connections.

3
00:00:04,640 --> 00:00:09,540
A VPC peering connection is a networking connection between two VPCs.

4
00:00:10,090 --> 00:00:14,510
This connection enables you to route traffic between your VPCs using private

5
00:00:14,510 --> 00:00:18,290
IPv4 addresses or private IPv6 addresses.

6
00:00:19,080 --> 00:00:22,680
In this way, instances in either VPC can communicate with

7
00:00:22,760 --> 00:00:25,080
each other as if they were on the same network.

8
00:00:25,770 --> 00:00:27,780
When creating peering connections,

9
00:00:27,790 --> 00:00:31,590
you aren't just limited to your own VPCs in your account. You can peer with

10
00:00:31,590 --> 00:00:36,180
VPCs located in different AWS accounts. Moreover,

11
00:00:36,190 --> 00:00:38,460
the VPCs can be in different Regions,

12
00:00:38,470 --> 00:00:41,850
also known as an inter-Region VPC peering connection.

13
00:00:42,580 --> 00:00:43,730
With this in mind,

14
00:00:43,870 --> 00:00:46,730
VPC peering provides a simple and cost-effective

15
00:00:46,730 --> 00:00:49,740
way to share resources between Regions or accounts.

16
00:00:50,480 --> 00:00:55,160
Additionally, VPC peering connections help facilitate the transfer of data.

17
00:00:55,560 --> 00:00:57,710
This can be used in a variety of scenarios,

18
00:00:57,710 --> 00:01:01,140
such as replication of data for data redundancy or to

19
00:01:01,140 --> 00:01:05,420
promote communication within organizations with uses like a file sharing network.

20
00:01:06,440 --> 00:01:08,430
When creating peering connections,

21
00:01:08,620 --> 00:01:11,950
AWS uses the existing infrastructure of a VPC.

22
00:01:12,090 --> 00:01:14,600
It is neither a gateway nor a VPN connection

23
00:01:14,780 --> 00:01:17,570
and does not rely on a separate piece of physical hardware.

24
00:01:18,010 --> 00:01:18,960
As a result,

25
00:01:19,050 --> 00:01:21,700
peering connections prevent problems such as a single

26
00:01:21,700 --> 00:01:24,990
point of failure for communication or bandwidth bottlenecks.

27
00:01:26,130 --> 00:01:29,370
Peering connections also use the AWS backbone.

28
00:01:29,820 --> 00:01:31,840
Since traffic always stays on the global

29
00:01:31,940 --> 00:01:33,180
AWS backbone

30
00:01:33,330 --> 00:01:35,260
and never traverses the public internet,

31
00:01:35,380 --> 00:01:37,990
VPC peering effectively reduces threats,

32
00:01:38,130 --> 00:01:39,530
such as common exploits

33
00:01:39,680 --> 00:01:40,810
and DDoS attacks.

34
00:01:41,780 --> 00:01:46,980
Next, we will examine how to establish a VPC peering connection between two VPCs.

35
00:01:47,460 --> 00:01:49,700
The first VPC will be our requester,

36
00:01:49,850 --> 00:01:51,480
and the second will be our accepter.

37
00:01:52,070 --> 00:01:55,810
To establish a VPC peering connection, you do the following:

38
00:01:56,540 --> 00:01:59,250
First, the owner of the requester VPC

39
00:01:59,380 --> 00:02:02,640
sends a request to the owner of the accepter VPC

40
00:02:02,780 --> 00:02:04,970
to create the VPC peering connection.

41
00:02:05,840 --> 00:02:07,670
Before we continue with the steps,

42
00:02:07,790 --> 00:02:11,980
it's important to note that VPC peering doesn't support all configurations.

43
00:02:12,370 --> 00:02:13,320
For example,

44
00:02:13,490 --> 00:02:15,920
the accepter VPC cannot have a CIDR block

45
00:02:15,920 --> 00:02:18,820
that overlaps with the requester VPC CIDR block.

46
00:02:19,720 --> 00:02:22,870
For the second step, the owner of the accepter VPC,

47
00:02:22,980 --> 00:02:23,660
which is

48
00:02:23,780 --> 00:02:26,330
either you or another AWS account,

49
00:02:26,480 --> 00:02:28,900
accepts the VPC peering connection request

50
00:02:28,900 --> 00:02:31,220
to activate the VPC peering connection.

51
00:02:31,680 --> 00:02:33,350
The VPCs are now peered.

52
00:02:34,070 --> 00:02:34,750
Next,

53
00:02:34,870 --> 00:02:37,660
to enable the flow of traffic between the VPCs,

54
00:02:37,780 --> 00:02:40,470
the owner of each VPC in the peering connection must

55
00:02:40,470 --> 00:02:43,730
manually add a route to their desired VPC route tables.

56
00:02:44,080 --> 00:02:47,840
That route must point to the IP address range of the other peer VPC.

57
00:02:49,250 --> 00:02:50,880
Finally, if required,

58
00:02:51,020 --> 00:02:54,500
update the security group rules that are associated with your instance to

59
00:02:54,500 --> 00:02:57,860
ensure that traffic to and from the peer VPC is not restricted.

60
00:02:58,840 --> 00:03:00,770
Now that your VPCs are peered,

61
00:03:00,900 --> 00:03:03,950
you can go ahead and peer it with multiple other VPCs.

62
00:03:04,080 --> 00:03:09,040
However, note that VPC peering connections do not support transitive properties.

63
00:03:09,360 --> 00:03:12,380
All peered VPCs must be directly peered with each other.

64
00:03:13,130 --> 00:03:16,780
Similarly, VPC peering connections cannot use edge-to-edge

65
00:03:16,820 --> 00:03:18,210
routing to access resources

66
00:03:18,210 --> 00:03:20,010
it does not have direct access to,

67
00:03:20,160 --> 00:03:21,650
such as an S3 bucket.


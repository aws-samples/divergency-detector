1
00:00:00,120 --> 00:00:01,840
AWS Batch Overview.

2
00:00:03,020 --> 00:00:07,200
Developers, scientists, and engineers use AWS Batch

3
00:00:07,200 --> 00:00:11,370
to efficiently run hundreds of thousands of batch computing jobs on AWS.

4
00:00:14,030 --> 00:00:19,010
Using AWS Batch, there is no need to install and manage batch computing software

5
00:00:19,020 --> 00:00:21,550
or server clusters that you use to run your jobs.

6
00:00:21,620 --> 00:00:24,940
So you can focus on analyzing results and solving problems.

7
00:00:27,660 --> 00:00:30,220
AWS Batch plans, schedules,

8
00:00:30,240 --> 00:00:33,160
and runs your batch computing workloads across the full range of

9
00:00:33,180 --> 00:00:35,460
AWS Batch compute services and features,

10
00:00:35,590 --> 00:00:42,360
such as AWS Fargate, Amazon Elastic Compute Cloud, or Amazon EC2, and spot instances.

11
00:00:44,940 --> 00:00:48,000
You can use AWS Batch at no additional charge.

12
00:00:49,050 --> 00:00:53,920
You pay only for the AWS resources that you create to store and run your batch jobs,

13
00:00:53,980 --> 00:00:57,090
such as EC2 instances or Fargate jobs.

14
00:01:00,000 --> 00:01:01,980
AWS Batch Benefits.

15
00:01:02,150 --> 00:01:03,770
Fully managed.

16
00:01:04,000 --> 00:01:07,560
AWS Batch removes the need to operate third-party commercial

17
00:01:07,580 --> 00:01:10,080
or open-source batch processing solutions.

18
00:01:10,980 --> 00:01:13,940
AWS Batch manages the infrastructure for you,

19
00:01:13,970 --> 00:01:16,910
avoiding the complexities of provisioning, managing,

20
00:01:17,030 --> 00:01:20,070
monitoring, and scaling your batch computing jobs.

21
00:01:21,000 --> 00:01:22,920
Integrated with AWS.

22
00:01:24,000 --> 00:01:28,380
AWS Batch is natively integrated with AWS products and services,

23
00:01:28,420 --> 00:01:31,260
allowing you to use the scaling, networking,

24
00:01:31,270 --> 00:01:34,200
and access management capabilities of AWS.

25
00:01:36,910 --> 00:01:39,500
This integration helps you run jobs that safely

26
00:01:39,500 --> 00:01:41,900
and securely retrieve and write data to and from

27
00:01:41,900 --> 00:01:46,600
AWS datastores, such as Amazon S3 or Amazon DynamoDB.

28
00:01:51,630 --> 00:01:53,850
Cost-optimized resource provisioning.

29
00:01:54,620 --> 00:01:57,340
AWS Batch provisions compute resources

30
00:01:57,460 --> 00:02:00,250
and optimizes the job distribution based on the volume

31
00:02:00,340 --> 00:02:03,120
and resource requirements of the submitted batch jobs.

32
00:02:05,620 --> 00:02:07,660
AWS Batch dynamically scales

33
00:02:07,660 --> 00:02:11,230
compute resources to any quantity required to run your batch jobs,

34
00:02:11,370 --> 00:02:14,440
freeing you from the constraints of fixed capacity clusters.

35
00:02:16,520 --> 00:02:21,290
AWS Batch will use spot instances or submit to Fargate Spot on your behalf,

36
00:02:21,420 --> 00:02:23,940
reducing the cost of running your batch jobs further.


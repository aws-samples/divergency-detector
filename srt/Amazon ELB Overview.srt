1
00:00:00,000 --> 00:00:03,630
Amazon Elastic Load Balancing (ELB) Overview.

2
00:00:04,690 --> 00:00:06,980
Elastic Load Balancing, or ELB,

3
00:00:07,000 --> 00:00:11,340
automatically distributes incoming application traffic across multiple targets,

4
00:00:11,480 --> 00:00:14,450
such as Amazon EC2 instances, containers,

5
00:00:14,580 --> 00:00:18,070
IP addresses, Lambda functions, and virtual appliances.

6
00:00:18,730 --> 00:00:21,230
ELB automatically scales your load balancer

7
00:00:21,330 --> 00:00:23,580
as your incoming traffic changes over time.

8
00:00:25,610 --> 00:00:28,090
Elastic Load Balancing is a regional service.

9
00:00:28,100 --> 00:00:31,340
It can handle the varying load of your application traffic

10
00:00:31,350 --> 00:00:35,540
in a single Availability Zone or across multiple Availability Zones.

11
00:00:36,370 --> 00:00:40,210
This increases the availability and fault tolerance of your applications.

12
00:00:40,920 --> 00:00:43,660
ELB can be internet- or internal-facing.

13
00:00:43,800 --> 00:00:48,320
Internet-facing load balancers can route requests from clients over the internet.

14
00:00:48,330 --> 00:00:49,530
On the other hand,

15
00:00:49,540 --> 00:00:52,250
internal load balancers can only route requests

16
00:00:52,250 --> 00:00:54,280
from clients with access to the VPC

17
00:00:54,280 --> 00:00:55,430
for the load balancer.

18
00:00:56,290 --> 00:00:58,340
You can figure your load balancer to accept

19
00:00:58,340 --> 00:01:01,650
incoming traffic by specifying one or more listeners.

20
00:01:01,660 --> 00:01:06,440
A listener is a process that checks for connection requests using the protocol

21
00:01:06,440 --> 00:01:09,850
and port that you configure and forwards requests to a target group.

22
00:01:10,540 --> 00:01:14,140
Each target group routes requests to one or more registered targets,

23
00:01:14,260 --> 00:01:15,910
such as EC2 instances.

24
00:01:16,530 --> 00:01:18,480
The rules that you define for a listener

25
00:01:18,600 --> 00:01:22,140
determine how the load balancer routes requests to its registered targets.

26
00:01:23,310 --> 00:01:25,440
ELB monitors the health of the targets

27
00:01:25,560 --> 00:01:27,630
and routes traffic only to the healthy targets.

28
00:01:28,370 --> 00:01:31,040
You can also offload the work of encryption and decryption

29
00:01:31,060 --> 00:01:35,200
to your load balancer so that your compute resources can focus on their main work.

30
00:01:36,690 --> 00:01:39,760
Elastic Load Balancing offers four types of load balancers

31
00:01:39,820 --> 00:01:41,680
that all feature the high availability,

32
00:01:41,690 --> 00:01:42,920
automatic scaling,

33
00:01:43,040 --> 00:01:46,820
and robust security necessary to make your applications fault-tolerant.

34
00:01:47,600 --> 00:01:50,180
Now, let's look at each of these load balancers.

35
00:01:50,910 --> 00:01:52,470
Application Load Balancer

36
00:01:52,600 --> 00:01:54,980
functions at the application-level layer 7.

37
00:01:55,530 --> 00:01:58,400
It is best suited for load balancing of HTTP,

38
00:01:58,410 --> 00:02:02,870
HTTPS, and gRPC traffic and provides advanced request routing

39
00:02:03,050 --> 00:02:05,920
targeted at the delivery of modern application architectures,

40
00:02:06,040 --> 00:02:08,150
including microservices and containers.

41
00:02:08,990 --> 00:02:12,590
Application Load Balancer also routes traffic to targets within

42
00:02:12,590 --> 00:02:15,560
Amazon VPC based on the content of the request.

43
00:02:16,720 --> 00:02:20,460
Network Load Balancer functions at the connection-level layer 4.

44
00:02:20,470 --> 00:02:23,400
It is best suited for load balancing of TCP,

45
00:02:23,410 --> 00:02:28,080
UDP, and TLS traffic where extreme performance is required.

46
00:02:28,090 --> 00:02:33,020
Network Load Balancer can also route traffic to targets within Amazon VPC ,

47
00:02:33,080 --> 00:02:36,020
and is capable of handling millions of requests per second

48
00:02:36,080 --> 00:02:37,680
while maintaining ultralow latencies.

49
00:02:38,720 --> 00:02:40,780
It supports static IP addresses.

50
00:02:40,790 --> 00:02:45,620
You can also assign one elastic IP address per subnet enabled for the load balancer.

51
00:02:47,200 --> 00:02:48,630
Gateway Load Balancer

52
00:02:48,750 --> 00:02:51,460
functions at the network level as layer-3 gateway

53
00:02:51,500 --> 00:02:53,180
and a layer-4 load balancer.

54
00:02:53,640 --> 00:02:56,500
It listens for all IP packets across all ports.

55
00:02:57,110 --> 00:03:00,070
Gateway Load Balancer makes it easy to deploy, scale,

56
00:03:00,190 --> 00:03:02,790
and run third-party virtual networking appliances,

57
00:03:02,910 --> 00:03:05,800
such as firewalls, intrusion detection and prevention

58
00:03:05,800 --> 00:03:08,270
systems, and deep packet inspection systems.

59
00:03:09,100 --> 00:03:10,380
It gives you one gateway

60
00:03:10,520 --> 00:03:13,780
for distributing traffic across multiple virtual appliances.

61
00:03:14,320 --> 00:03:17,000
Gateway Load Balancer also provides autoscaling

62
00:03:17,000 --> 00:03:18,910
for fleets of third-party appliances.

63
00:03:19,490 --> 00:03:22,700
It is transparent to source and destination of traffic.

64
00:03:22,710 --> 00:03:26,430
They are well-suited for working with third-party appliances for security,

65
00:03:26,440 --> 00:03:28,730
network analytics, and other use cases.

66
00:03:30,060 --> 00:03:33,960
Classic Load Balancer functions at both layer-4 connection level

67
00:03:33,980 --> 00:03:36,630
and layer-7 request or application level.

68
00:03:36,640 --> 00:03:42,780
It supports TCP, SSL, TLS, HTTP, and HTTPS traffic.

69
00:03:42,790 --> 00:03:47,400
It is intended for applications that were built within the EC2-Classic network.

70
00:03:47,960 --> 00:03:49,520
With Elastic Load Balancing,

71
00:03:49,580 --> 00:03:53,360
you can select the appropriate load balancer based on your application needs.


1
00:00:00,490 --> 00:00:03,970
Amazon Simple Queue Service (SQS) Overview.

2
00:00:06,240 --> 00:00:07,870
Amazon Simple Queue Service, or SQS,

3
00:00:08,050 --> 00:00:10,990
is a fully managed message queuing service.

4
00:00:13,790 --> 00:00:16,200
SQS lets you decouple application components

5
00:00:16,360 --> 00:00:17,780
and scale microservices,

6
00:00:17,790 --> 00:00:20,800
distributed systems, and serverless applications.

7
00:00:21,440 --> 00:00:22,400
Using SQS,

8
00:00:22,400 --> 00:00:25,150
you can send, store, and receive messages between

9
00:00:25,150 --> 00:00:27,020
software components at any volume,

10
00:00:27,220 --> 00:00:28,310
without losing messages

11
00:00:28,320 --> 00:00:30,840
or requiring other services to be available.

12
00:00:30,850 --> 00:00:33,890
You can get started with SQS in minutes using the

13
00:00:33,890 --> 00:00:37,660
AWS Console Command Line Interface or SDK of your choice

14
00:00:37,670 --> 00:00:39,110
and three simple commands.

15
00:00:40,500 --> 00:00:43,160
SQS offers two types of message queues.

16
00:00:43,170 --> 00:00:45,400
Standard queues offer maximum throughput,

17
00:00:45,410 --> 00:00:48,210
best-effort ordering, and at-least-once delivery.

18
00:00:49,700 --> 00:00:53,610
SQS FIFO queues are designed to guarantee that messages are

19
00:00:53,610 --> 00:00:56,950
processed exactly once in the exact order that they are sent.

20
00:00:59,120 --> 00:01:00,550
Here are the key benefits.

21
00:01:00,560 --> 00:01:04,019
Amazon SQS eliminates all your administrative overhead.

22
00:01:04,030 --> 00:01:06,810
AWS manages all ongoing operations

23
00:01:06,820 --> 00:01:08,850
and underlying infrastructure needed to provide

24
00:01:08,850 --> 00:01:12,380
a highly available and scalable message queuing service.

25
00:01:12,740 --> 00:01:13,700
With SQS,

26
00:01:13,710 --> 00:01:16,730
there is no up-front cost, no need to acquire,

27
00:01:16,740 --> 00:01:20,390
install, and configure messaging software and no time-consuming

28
00:01:20,390 --> 00:01:23,930
build-out and maintenance of supporting infrastructure.

29
00:01:25,790 --> 00:01:29,160
Amazon SQS reliably delivers messages for you.

30
00:01:29,170 --> 00:01:32,150
SQS lets you decouple application components so

31
00:01:32,150 --> 00:01:34,290
that they run it and fail independently,

32
00:01:34,300 --> 00:01:36,950
increasing the overall fault tolerance of the system.

33
00:01:37,510 --> 00:01:41,220
Multiple copies of every message are stored redundantly across multiple

34
00:01:41,220 --> 00:01:44,590
Availability Zones so that they are available whenever needed.

35
00:01:45,790 --> 00:01:48,960
You can use Amazon SQS to keep sensitive data secure.

36
00:01:48,970 --> 00:01:51,480
You can use Amazon SQS to exchange sensitive

37
00:01:51,480 --> 00:01:54,670
data between applications using server-side encryption, or SSE,

38
00:01:54,680 --> 00:01:57,370
to encrypt each message body.

39
00:01:58,580 --> 00:02:03,320
Amazon SQS-SSE integration with AWS Key Management Service, or KMS,

40
00:02:03,620 --> 00:02:06,840
allows you to centrally manage the keys that protect SQS messages,

41
00:02:06,900 --> 00:02:10,060
along with keys that protect your other AWS resources.

42
00:02:10,070 --> 00:02:15,100
AWS KMS logs every use of your encryption keys to AWS CloudTrail

43
00:02:15,100 --> 00:02:17,810
to help meet your regulatory and compliance needs.

44
00:02:19,830 --> 00:02:22,830
Amazon SQS leverages the AWS Cloud to scale

45
00:02:22,830 --> 00:02:25,960
elastically and cost-effectively based on demand.

46
00:02:25,980 --> 00:02:29,500
You don't have to worry about capacity planning and pre-provisioning.

47
00:02:29,560 --> 00:02:33,610
There's no limit to the number of messages per queue. Standard queues provide

48
00:02:33,610 --> 00:02:35,220
nearly unlimited throughput.

49
00:02:35,520 --> 00:02:36,980
Costs are based on usage,

50
00:02:36,990 --> 00:02:39,470
which provides significant cost savings versus the

51
00:02:39,470 --> 00:02:42,120
always-on model of self-managed messaging middleware.

52
00:02:44,240 --> 00:02:46,600
Let's look at some of the SQS functionalities.

53
00:02:46,610 --> 00:02:49,730
You can create unlimited Amazon SQS queues with

54
00:02:49,730 --> 00:02:52,770
an unlimited number of messages in any region.

55
00:02:52,800 --> 00:02:56,140
In terms of payload size, message payloads can contain up to

56
00:02:56,180 --> 00:02:59,120
256 kilobytes of text in any format.

57
00:02:59,560 --> 00:03:03,820
Each 64 kilobytes chunk of payload is billed as one request.

58
00:03:04,030 --> 00:03:06,210
Batch operation is also available.

59
00:03:06,220 --> 00:03:08,960
You can send, receive, or delete messages in

60
00:03:08,960 --> 00:03:12,650
batches of up to 10 messages or 256 kilobytes.

61
00:03:12,890 --> 00:03:14,720
Messages can be retained in queues

62
00:03:14,860 --> 00:03:16,340
for up to 14 days.

63
00:03:18,110 --> 00:03:21,320
SQS can send and read messages simultaneously.

64
00:03:21,500 --> 00:03:22,690
Message locking.

65
00:03:22,700 --> 00:03:26,910
When a message is received, it becomes locked while being processed.

66
00:03:26,930 --> 00:03:29,040
The locked message keeps other computers

67
00:03:29,040 --> 00:03:31,380
from processing the message simultaneously.

68
00:03:31,390 --> 00:03:35,100
When processing is completed, you can delete the message from the queue.

69
00:03:35,110 --> 00:03:37,130
If the message processing fails,

70
00:03:37,140 --> 00:03:40,360
the lock will expire, and the message will be available again.

71
00:03:42,350 --> 00:03:44,700
Long polling. When your queue is empty,

72
00:03:44,700 --> 00:03:49,430
long-poll requests wait up to 20 seconds for the next message to arrive.

73
00:03:49,440 --> 00:03:52,210
This reduces extraneous polling to minimize cost while

74
00:03:52,210 --> 00:03:54,700
receiving new messages as quickly as possible.

75
00:03:54,710 --> 00:03:56,760
Dead Letter Queues,or DLQs.

76
00:03:57,160 --> 00:04:00,880
Dead Letter Queue is a queue of messages that could not be processed.

77
00:04:00,890 --> 00:04:03,300
It receives messages after a maximum number

78
00:04:03,300 --> 00:04:05,360
of processing attempts has been reached.

79
00:04:05,380 --> 00:04:10,090
DLQs must be of the same type as the source queue (standard or FIFO).

80
00:04:11,730 --> 00:04:12,860
Queue sharing.

81
00:04:12,870 --> 00:04:15,360
You can securely share Amazon SQS queues

82
00:04:15,360 --> 00:04:18,589
anonymously or with specific AWS accounts.

83
00:04:18,600 --> 00:04:23,030
Queue sharing can also be restricted by IP address and time of day.

84
00:04:24,050 --> 00:04:24,820
In summary,

85
00:04:24,820 --> 00:04:27,800
Amazon SQS is a fully managed message queuing service

86
00:04:27,960 --> 00:04:29,820
that provides many benefits and features

87
00:04:29,980 --> 00:04:32,660
over building your own software for managing message queues.


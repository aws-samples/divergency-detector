1
00:00:00,000 --> 00:00:01,740
Amazon SNS Overview.

2
00:00:02,660 --> 00:00:06,180
Amazon Simple Notification Service, or Amazon SNS,

3
00:00:06,180 --> 00:00:08,490
is a highly available, durable, secure,

4
00:00:08,660 --> 00:00:11,430
fully managed publish-and-subscribe messaging service

5
00:00:11,560 --> 00:00:13,720
that enables you to decouple microservices,

6
00:00:13,730 --> 00:00:16,390
distributed systems, and serverless applications.

7
00:00:16,980 --> 00:00:21,810
Amazon SNS provides topics for high-throughput push-based, many-to-many messaging.

8
00:00:21,820 --> 00:00:23,990
Using Amazon SNS topics,

9
00:00:24,000 --> 00:00:27,180
your publisher systems can fan out messages to a large number

10
00:00:27,180 --> 00:00:31,690
of subscriber endpoints for parallel processing, including Amazon SQS queues,

11
00:00:31,720 --> 00:00:35,470
AWS Lambda functions, and HTTPS webhooks.

12
00:00:35,540 --> 00:00:36,730
Additionally,

13
00:00:36,760 --> 00:00:42,170
SNS can be used to fan out notifications to end users using mobile push, SMS, and email.

14
00:00:43,860 --> 00:00:46,690
Let's review some of the benefits of Amazon SNS.

15
00:00:46,950 --> 00:00:50,600
Amazon SNS uses cross-Availability Zone message storage

16
00:00:50,600 --> 00:00:54,390
to provide high message durability. Running within Amazon's proven

17
00:00:54,390 --> 00:00:56,390
network infrastructure and data centers,

18
00:00:56,460 --> 00:01:00,440
Amazon SNS topics are available whenever your applications need them.

19
00:01:00,470 --> 00:01:03,670
All messages published to Amazon SNS are stored

20
00:01:03,670 --> 00:01:07,890
redundantly across multiple geographically separated servers and data centers.

21
00:01:08,170 --> 00:01:13,420
Amazon SNS reliably delivers messages to all supported AWS endpoints,

22
00:01:13,550 --> 00:01:17,420
such as Amazon SQS queues and AWS Lambda functions.

23
00:01:17,700 --> 00:01:20,500
In case the subscribed endpoint isn't available,

24
00:01:20,570 --> 00:01:24,180
Amazon SNS executes message delivery retry policies

25
00:01:24,200 --> 00:01:26,700
and can also move messages to dead-letter queues.

26
00:01:27,290 --> 00:01:28,500
Amazon SNS

27
00:01:28,500 --> 00:01:31,860
helps you simplify your publisher-subscriber messaging architecture

28
00:01:31,940 --> 00:01:35,240
by offloading the message-filtering logic from your subscriber systems

29
00:01:35,500 --> 00:01:38,100
and message-routing logic from your publisher systems.

30
00:01:38,490 --> 00:01:40,640
With Amazon SNS message filtering,

31
00:01:40,750 --> 00:01:43,760
subscribing endpoints receive only the messages of interest

32
00:01:43,820 --> 00:01:46,200
instead of all messages published to the topic.

33
00:01:46,440 --> 00:01:49,870
Amazon CloudWatch gives visibility into your filtering activity,

34
00:01:49,940 --> 00:01:53,360
and AWS CloudFormation enables you to deploy subscription

35
00:01:53,360 --> 00:01:55,860
filter policies in an automated and secure manner.

36
00:01:56,370 --> 00:01:59,850
Amazon SNS leverages the proven AWS Cloud

37
00:01:59,850 --> 00:02:02,080
to dynamically scale with your application.

38
00:02:02,190 --> 00:02:04,700
Amazon SNS is a fully managed service,

39
00:02:04,710 --> 00:02:08,530
taking care of the heavy lifting related to capacity planning, provisioning,

40
00:02:08,539 --> 00:02:12,620
monitoring, and patching. The service is designed to handle high-throughput,

41
00:02:12,630 --> 00:02:14,000
bursty traffic patterns.

42
00:02:14,240 --> 00:02:18,620
Moreover, there is no up-front cost and no need to acquire, install,

43
00:02:18,770 --> 00:02:21,300
configure, or upgrade messaging software.

44
00:02:21,520 --> 00:02:25,920
Amazon SNS topic owners can keep sensitive data secure by setting topic

45
00:02:25,920 --> 00:02:29,330
policies that restrict who can publish and subscribe to a topic.

46
00:02:29,500 --> 00:02:33,270
Amazon SNS also ensures that data is encrypted in transit

47
00:02:33,280 --> 00:02:37,900
by applying Amazon ATS certificates to support its HTTPS API

48
00:02:37,900 --> 00:02:42,150
and can also encrypt data at rest by using AWS KMS keys.

49
00:02:42,550 --> 00:02:45,360
Additionally, using AWS PrivateLink,

50
00:02:45,420 --> 00:02:48,770
you can privately publish messages to Amazon SNS topics from

51
00:02:48,770 --> 00:02:52,670
your Amazon VPC subnets without traversing the public internet.

52
00:02:52,810 --> 00:02:56,490
Amazon SNS can also support use cases in regulated markets

53
00:02:56,610 --> 00:03:01,060
and is in scope with compliance programs, including FIPS, HIPAA, and FedRAMP.


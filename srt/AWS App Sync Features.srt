1
00:00:00,000 --> 00:00:02,820
Let's review the key features for AWS AppSync.

2
00:00:03,620 --> 00:00:08,160
AppSync uses GraphQL, a data language that enables client apps to fetch,

3
00:00:08,170 --> 00:00:10,380
change, and subscribe to data from servers.

4
00:00:10,860 --> 00:00:13,580
In a GraphQL query, the client specifies

5
00:00:13,600 --> 00:00:16,660
how the data is to be structured when it is returned by the server.

6
00:00:16,670 --> 00:00:19,440
This makes it possible for the client to query only for

7
00:00:19,440 --> 00:00:22,050
the data it needs in the format that it needs it in.

8
00:00:22,200 --> 00:00:25,240
GraphQL also includes a feature called introspection,

9
00:00:25,250 --> 00:00:27,640
which lets new developers on a project discover

10
00:00:27,680 --> 00:00:31,060
the data available by querying information about the GraphQL schema.

11
00:00:31,450 --> 00:00:33,600
AppSync also lets you specify

12
00:00:33,620 --> 00:00:36,570
which portions of your data should be available in a real-time manner.

13
00:00:36,580 --> 00:00:38,530
Using GraphQL subscriptions.

14
00:00:38,550 --> 00:00:42,600
GraphQL subscriptions are simple statements in the application code

15
00:00:42,700 --> 00:00:45,630
that tell the service what data should be updated in real time.

16
00:00:46,160 --> 00:00:50,780
With AppSync, you can update your data using the AWS Amplify datastore.

17
00:00:50,790 --> 00:00:55,460
The Amplify datastore provides a queryable on-device datastore for web,

18
00:00:55,470 --> 00:00:59,000
mobile, and IoT developers to interact seamlessly

19
00:00:59,000 --> 00:01:01,700
with data whether you're online or offline.

20
00:01:01,710 --> 00:01:05,910
You can leverage advanced versioning and conflict detection and resolution

21
00:01:05,920 --> 00:01:08,800
that allows automatic merging of data from different clients.

22
00:01:10,510 --> 00:01:14,460
AppSync gives client applications data filtering capabilities with GraphQL

23
00:01:14,460 --> 00:01:16,920
so only the needed data is fetched,

24
00:01:16,980 --> 00:01:19,360
allowing for both server and client filtering.

25
00:01:19,610 --> 00:01:24,840
Since AppSync supports AWS Lambda, Amazon DynamoDB, and Amazon Elastisearch,

26
00:01:24,920 --> 00:01:27,420
the GraphQL operations can be simple lookups,

27
00:01:27,530 --> 00:01:29,140
complex queries and mappings,

28
00:01:29,300 --> 00:01:30,420
full-text searches,

29
00:01:30,560 --> 00:01:32,890
fuzzy keyword searches, or geo lookups.

30
00:01:33,460 --> 00:01:37,070
AWS AppSync server-side data caching capabilities

31
00:01:37,170 --> 00:01:41,150
reduce the need to directly access data sources by making data available

32
00:01:41,150 --> 00:01:44,870
in high-speed and memory-managed caches delivering data at low latency.

33
00:01:45,050 --> 00:01:46,480
Being fully managed,

34
00:01:46,520 --> 00:01:48,390
it eliminates the operational overhead of

35
00:01:48,390 --> 00:01:50,900
managing cache clusters by providing the

36
00:01:50,900 --> 00:01:54,620
flexibility to selectively cache data fields and operations defined

37
00:01:54,990 --> 00:01:57,180
in the GraphQL schema with customizable expiration.

38
00:01:57,460 --> 00:01:59,480
Data caching further enables developers

39
00:01:59,500 --> 00:02:02,160
to configure optimal performance for their business needs.

40
00:02:02,700 --> 00:02:03,920
To control your data,

41
00:02:04,020 --> 00:02:06,560
AppSync allows several levels of data access and

42
00:02:06,560 --> 00:02:09,470
authorization, depending on the needs of an application.

43
00:02:09,520 --> 00:02:13,540
Simple access can be protected by a key, and more restrictive permission

44
00:02:13,540 --> 00:02:17,580
can be done with AWS Identity and Access Management user roles.

45
00:02:17,590 --> 00:02:20,520
Additionally, AWS AppSync integrates with

46
00:02:20,540 --> 00:02:24,440
Amazon Cognito user pools for email and password functionality.

47
00:02:24,720 --> 00:02:27,720
Social providers and enterprise federation with SAML.

48
00:02:28,040 --> 00:02:31,920
Customers can use the group functionality for logical organization of users

49
00:02:31,920 --> 00:02:35,140
and roles as well as OAuth features for application access.


1
00:00:00,220 --> 00:00:02,200
AWS CodeBuild Overview.

2
00:00:03,810 --> 00:00:09,270
AWS CodeBuild is a fully managed continuous integration service in the cloud.

3
00:00:10,320 --> 00:00:11,500
CodeBuild compiles

4
00:00:11,500 --> 00:00:16,650
your source code, runs tests, and produces software packages that are ready to deploy.

5
00:00:17,210 --> 00:00:18,210
With CodeBuild,

6
00:00:18,320 --> 00:00:19,520
you don't need to provision,

7
00:00:19,670 --> 00:00:21,800
manage, and scale your own build servers.

8
00:00:22,700 --> 00:00:27,080
CodeBuild scales continuously and processes multiple builds concurrently.

9
00:00:30,770 --> 00:00:33,630
You just specify the location of your source code,

10
00:00:33,640 --> 00:00:37,920
choose your build settings, and CodeBuild will run build scripts for compiling,

11
00:00:37,930 --> 00:00:38,970
testing, and packaging

12
00:00:38,970 --> 00:00:39,560
your code.

13
00:00:40,700 --> 00:00:42,090
Here are the key benefits.

14
00:00:42,990 --> 00:00:44,700
Fully managed build service.

15
00:00:45,420 --> 00:00:49,170
AWS CodeBuild eliminates the need to set up, patch,

16
00:00:49,180 --> 00:00:52,320
update, and manage your own build servers and software.

17
00:00:53,230 --> 00:00:55,870
There is no software to install or manage.

18
00:00:56,780 --> 00:00:57,680
Extensible.

19
00:00:58,530 --> 00:01:00,500
You can get started quickly by using

20
00:01:00,500 --> 00:01:03,380
prepackaged build tools and programming runtimes,

21
00:01:04,160 --> 00:01:08,170
or you can bring your own build tools and programming runtimes

22
00:01:08,290 --> 00:01:12,430
to use with AWS CodeBuild by creating customized build environments.

23
00:01:13,160 --> 00:01:17,630
You can extend what you use and run on your own environment to use an AWS CodeBuild.

24
00:01:18,650 --> 00:01:19,850
Continuous scaling.

25
00:01:20,750 --> 00:01:26,240
AWS CodeBuild scales up and scales down automatically to meet your build volume.

26
00:01:26,250 --> 00:01:28,390
It immediately processes each build

27
00:01:28,390 --> 00:01:30,900
you submit and can run separate builds concurrently,

28
00:01:30,910 --> 00:01:33,290
which means your builds are not left waiting in a queue.

29
00:01:34,680 --> 00:01:37,110
Enables continuous integration and delivery.

30
00:01:38,130 --> 00:01:43,140
AWS CodeBuild belongs to a family of AWS code services which you can

31
00:01:43,140 --> 00:01:45,260
use to create complete automated software

32
00:01:45,260 --> 00:01:50,010
release workflows for continuous integration and delivery, or CI/CD.

33
00:01:50,950 --> 00:01:55,050
You can also integrate CodeBuild into your existing CI/CD workflow.

34
00:01:55,760 --> 00:01:56,570
For example,

35
00:01:56,630 --> 00:01:59,080
you can use CodeBuild as a worker node for

36
00:01:59,080 --> 00:02:02,160
your existing Jenkins server setup for distributed builds.

37
00:02:03,440 --> 00:02:04,640
Pay as you go.

38
00:02:05,790 --> 00:02:07,480
With AWS CodeBuild,

39
00:02:07,490 --> 00:02:11,670
you are charged based on the number of minutes it takes to complete your build.

40
00:02:12,290 --> 00:02:16,550
This means you no longer have to worry about paying for idle build-server capacity.

41
00:02:17,910 --> 00:02:18,750
Secure.

42
00:02:19,700 --> 00:02:21,410
With AWS CodeBuild,

43
00:02:21,420 --> 00:02:25,160
your build artifacts are encrypted with customer-specific keys

44
00:02:25,170 --> 00:02:29,540
that are managed by the AWS Key Management Service, or KMS.

45
00:02:30,080 --> 00:02:35,200
It is also integrated with AWS Identity and Access Management, or AWS IAM,

46
00:02:35,280 --> 00:02:38,900
so you can assign user-specific permissions to your build projects.

47
00:02:41,220 --> 00:02:42,830
This is how CodeBuild works.

48
00:02:43,900 --> 00:02:45,120
First, as input,

49
00:02:45,260 --> 00:02:47,730
you must provide CodeBuild with a build project.

50
00:02:48,800 --> 00:02:52,510
A build project includes information about how to run a build,

51
00:02:52,520 --> 00:02:54,890
including where to get the source code, which

52
00:02:54,890 --> 00:02:58,010
build environment to use, which build commands to run,

53
00:02:58,570 --> 00:03:01,260
and where to store the build output. CodeBuild

54
00:03:01,270 --> 00:03:04,290
uses the build project to create the build environment.

55
00:03:05,930 --> 00:03:09,550
Then CodeBuild downloads the source code into the build environment.

56
00:03:10,590 --> 00:03:14,330
It then uses the build specification, or build spec, as defined in the

57
00:03:14,330 --> 00:03:18,360
build project or included directly in the source code to run the build.

58
00:03:19,470 --> 00:03:21,620
A build spec is a collection of build

59
00:03:21,620 --> 00:03:24,420
commands and related settings in YAML format.

60
00:03:25,380 --> 00:03:27,460
After CodeBuild finishes running the build,

61
00:03:27,590 --> 00:03:29,180
and if there's a build output,

62
00:03:29,240 --> 00:03:32,630
the build environment uploads its output to an Amazon S3 bucket.

63
00:03:33,910 --> 00:03:36,320
You can also specify, in the build spec, to

64
00:03:36,360 --> 00:03:39,430
send build notifications to an Amazon SNS topic.

65
00:03:40,450 --> 00:03:43,800
While the build is running, the build environment also sends information

66
00:03:43,800 --> 00:03:43,920
to CodeBuild and metrics and logs to Amazon CloudWatch Logs.
While the build is running, the build environment also sends information

67
00:03:43,920 --> 00:03:47,730
to CodeBuild and metrics and logs to Amazon CloudWatch Logs.

68
00:03:48,990 --> 00:03:54,120
You can use the CodeBuild console, AWS CLI, or AWS SDKs

69
00:03:54,250 --> 00:03:55,930
to get summarized build information

70
00:03:55,930 --> 00:03:58,460
from CodeBuild and detailed build information

71
00:03:58,610 --> 00:04:00,350
from Amazon CloudWatch Logs.

72
00:04:01,350 --> 00:04:03,560
If you use AWS CodePipeline

73
00:04:03,560 --> 00:04:07,080
to run builds, you can get limited build information from CodePipeline.

